version: '3.3'

services:

  wordpress:
    image: wordpress  # Use the official WordPress Docker image from Docker Hub
    restart: always   # Always restart the container if it stops unexpectedly
    ports:
      - 80:80        # Map port 80 on the host to port 80 on the container (HTTP traffic)
    environment:
      WORDPRESS_DB_HOST: db  # Set the hostname of the MySQL database server (should match the service name)
      WORDPRESS_DB_USER: soundarya  # Set the MySQL username for WordPress to connect to the database
      WORDPRESS_DB_PASSWORD: admin  # Set the MySQL password for the specified user
      WORDPRESS_DB_NAME: wordpress  # Set the name of the MySQL database WordPress will use
    volumes:
      - wordpress:/var/www/html  # Mount the 'wordpress' volume to persist WordPress data

  db:
    image: mysql:8.0.27  # Use the official MySQL 8.0 Docker image from Docker Hub
    restart: always  # Always restart the container if it stops unexpectedly
    environment:
      MYSQL_DATABASE: wordpress  # Set the name of the initial MySQL database to be created
      MYSQL_USER: soundarya  # Set the initial MySQL username
      MYSQL_PASSWORD: admin  # Set the initial MySQL password
      MYSQL_RANDOM_ROOT_PASSWORD: '1'  # Generate a random password for the root user and store it in a file
    volumes:
      - db:/var/lib/mysql  # Mount the 'db' volume to persist MySQL data
    expose:
      - 3306  # Expose the default MySQL port (3306) within the Docker network
      - 33060  # Expose an additional MySQL port (33060) within the Docker network

volumes:
  wordpress:  # Define a named volume 'wordpress' for persisting WordPress data
  db:  # Define a named volume 'db' for persisting MySQL data
